title = element_text(size=14),
plot.title = element_text(hjust = 0)) +
ylab("Feature score") +
xlab("")
dummy <- ggplot(data = style.summary, aes(x = Type, y = mean))+ facet_wrap(~variable, scales="free_y", ncol=4) +
geom_rect(aes(fill=featureType), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
scale_fill_manual(values=c("#cccc66", "#cc9999", "#9999cc", "#999999")) +
theme_minimal() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=13),
axis.text.y = element_text(size=11), axis.title.y = element_text(size=14),
strip.text.x = element_text(size=14), strip.text.y = element_text(size=14),
title = element_text(size=14),
plot.title = element_text(hjust = 0))
g1 <- ggplotGrob(bigfigure)
g2 <- ggplotGrob(dummy)
gtable_select <- function (x, ...)
{
matches <- c(...)
x$layout <- x$layout[matches, , drop = FALSE]
x$grobs <- x$grobs[matches]
x
}
panels <- grepl(pattern="panel", g2$layout$name)
strips <- grepl(pattern="strip_t", g2$layout$name)
g2$layout$t[panels] <- g2$layout$t[panels] - 1
g2$layout$b[panels] <- g2$layout$b[panels] - 1
new_strips <- gtable_select(g2, panels | strips)
grid.newpage()
grid.draw(new_strips)
gtable_stack <- function(g1, g2){
g1$grobs <- c(g1$grobs, g2$grobs)
g1$layout <- transform(g1$layout, z= z-max(z), name="g2")
g1$layout <- rbind(g1$layout, g2$layout)
g1
}
## ideally you'd remove the old strips, for now they're just covered
new_plot <- gtable_stack(g1, new_strips)
grid.newpage()
grid.draw(new_plot) # save as 11 X 9
bigfigure <- ggplot(style.summary, aes(x=Type, y=mean, fill=color, alpha=alpha)) +
geom_bar(stat="identity", color="black") +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=0.2, alpha=1) +
theme_bw() +
facet_wrap(~variable, scales="free_y", ncol=4) +
scale_x_discrete(labels=c("19th", "Imagist", "20th", "Amateur")) +
#scale_y_continous(breaks=c(0, max(mean), ))
scale_fill_manual(values=c("#CC6666", "#003366"), guide=FALSE) +
scale_alpha_manual(values=c(1, 0.4), guide=FALSE) +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=13),
axis.text.y = element_text(size=11), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15),
title = element_text(size=14),
plot.title = element_text(hjust = 0)) +
ylab("Feature score") +
xlab("")
dummy <- ggplot(data = style.summary, aes(x = Type, y = mean))+ facet_wrap(~variable, scales="free_y", ncol=4) +
geom_rect(aes(fill=featureType), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
scale_fill_manual(values=c("#cccc66", "#cc9999", "#9999cc", "#999999")) +
theme_minimal() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=13),
axis.text.y = element_text(size=11), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15),
title = element_text(size=14),
plot.title = element_text(hjust = 0))
g1 <- ggplotGrob(bigfigure)
g2 <- ggplotGrob(dummy)
gtable_select <- function (x, ...)
{
matches <- c(...)
x$layout <- x$layout[matches, , drop = FALSE]
x$grobs <- x$grobs[matches]
x
}
panels <- grepl(pattern="panel", g2$layout$name)
strips <- grepl(pattern="strip_t", g2$layout$name)
g2$layout$t[panels] <- g2$layout$t[panels] - 1
g2$layout$b[panels] <- g2$layout$b[panels] - 1
new_strips <- gtable_select(g2, panels | strips)
grid.newpage()
grid.draw(new_strips)
gtable_stack <- function(g1, g2){
g1$grobs <- c(g1$grobs, g2$grobs)
g1$layout <- transform(g1$layout, z= z-max(z), name="g2")
g1$layout <- rbind(g1$layout, g2$layout)
g1
}
## ideally you'd remove the old strips, for now they're just covered
new_plot <- gtable_stack(g1, new_strips)
grid.newpage()
grid.draw(new_plot) # save as 11 X 9
bigfigure <- ggplot(style.summary, aes(x=Type, y=mean, fill=color, alpha=alpha)) +
geom_bar(stat="identity", color="black") +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=0.2, alpha=1) +
theme_bw() +
facet_wrap(~variable, scales="free_y", ncol=4) +
scale_x_discrete(labels=c("19th", "Imagist", "20th", "Amateur")) +
#scale_y_continous(breaks=c(0, max(mean), ))
scale_fill_manual(values=c("#CC6666", "#003366"), guide=FALSE) +
scale_alpha_manual(values=c(1, 0.4), guide=FALSE) +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=14),
axis.text.y = element_text(size=12), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15),
title = element_text(size=14),
plot.title = element_text(hjust = 0)) +
ylab("Feature score") +
xlab("")
dummy <- ggplot(data = style.summary, aes(x = Type, y = mean))+ facet_wrap(~variable, scales="free_y", ncol=4) +
geom_rect(aes(fill=featureType), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
scale_fill_manual(values=c("#cccc66", "#cc9999", "#9999cc", "#999999")) +
theme_minimal() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=14),
axis.text.y = element_text(size=12), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15),
title = element_text(size=14),
plot.title = element_text(hjust = 0))
g1 <- ggplotGrob(bigfigure)
g2 <- ggplotGrob(dummy)
gtable_select <- function (x, ...)
{
matches <- c(...)
x$layout <- x$layout[matches, , drop = FALSE]
x$grobs <- x$grobs[matches]
x
}
panels <- grepl(pattern="panel", g2$layout$name)
strips <- grepl(pattern="strip_t", g2$layout$name)
g2$layout$t[panels] <- g2$layout$t[panels] - 1
g2$layout$b[panels] <- g2$layout$b[panels] - 1
new_strips <- gtable_select(g2, panels | strips)
grid.newpage()
grid.draw(new_strips)
gtable_stack <- function(g1, g2){
g1$grobs <- c(g1$grobs, g2$grobs)
g1$layout <- transform(g1$layout, z= z-max(z), name="g2")
g1$layout <- rbind(g1$layout, g2$layout)
g1
}
## ideally you'd remove the old strips, for now they're just covered
new_plot <- gtable_stack(g1, new_strips)
grid.newpage()
grid.draw(new_plot) # save as 11 X 9
bigfigure <- ggplot(style.summary, aes(x=Type, y=mean, fill=color, alpha=alpha)) +
geom_bar(stat="identity", color="black") +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=0.2, alpha=1) +
theme_bw() +
facet_wrap(~variable, scales="free_y", ncol=4) +
scale_x_discrete(labels=c("19th", "Imagist", "20th", "Amateur")) +
#scale_y_continous(breaks=c(0, max(mean), ))
scale_fill_manual(values=c("#CC6666", "#003366"), guide=FALSE) +
scale_alpha_manual(values=c(1, 0.4), guide=FALSE) +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=15),
axis.text.y = element_text(size=15), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15),
title = element_text(size=14),
plot.title = element_text(hjust = 0)) +
ylab("Feature score") +
xlab("")
dummy <- ggplot(data = style.summary, aes(x = Type, y = mean))+ facet_wrap(~variable, scales="free_y", ncol=4) +
geom_rect(aes(fill=featureType), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
scale_fill_manual(values=c("#cccc66", "#cc9999", "#9999cc", "#999999")) +
theme_minimal() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=15),
axis.text.y = element_text(size=15), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15),
title = element_text(size=14),
plot.title = element_text(hjust = 0))
g1 <- ggplotGrob(bigfigure)
g2 <- ggplotGrob(dummy)
gtable_select <- function (x, ...)
{
matches <- c(...)
x$layout <- x$layout[matches, , drop = FALSE]
x$grobs <- x$grobs[matches]
x
}
panels <- grepl(pattern="panel", g2$layout$name)
strips <- grepl(pattern="strip_t", g2$layout$name)
g2$layout$t[panels] <- g2$layout$t[panels] - 1
g2$layout$b[panels] <- g2$layout$b[panels] - 1
new_strips <- gtable_select(g2, panels | strips)
grid.newpage()
grid.draw(new_strips)
gtable_stack <- function(g1, g2){
g1$grobs <- c(g1$grobs, g2$grobs)
g1$layout <- transform(g1$layout, z= z-max(z), name="g2")
g1$layout <- rbind(g1$layout, g2$layout)
g1
}
## ideally you'd remove the old strips, for now they're just covered
new_plot <- gtable_stack(g1, new_strips)
grid.newpage()
grid.draw(new_plot) # save as 11 X 9
bigfigure <- ggplot(style.summary, aes(x=Type, y=mean, fill=color, alpha=alpha)) +
geom_bar(stat="identity", color="black") +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=0.2, alpha=1) +
theme_bw() +
facet_wrap(~variable, scales="free_y", ncol=4) +
scale_x_discrete(labels=c("19th", "Imagist", "20th", "Amateur")) +
#scale_y_continous(breaks=c(0, max(mean), ))
scale_fill_manual(values=c("#CC6666", "#003366"), guide=FALSE) +
scale_alpha_manual(values=c(1, 0.4), guide=FALSE) +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=15),
axis.text.y = element_text(size=15), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15)) +
ylab("Feature score") +
xlab("")
dummy <- ggplot(data = style.summary, aes(x = Type, y = mean))+ facet_wrap(~variable, scales="free_y", ncol=4) +
geom_rect(aes(fill=featureType), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
scale_fill_manual(values=c("#cccc66", "#cc9999", "#9999cc", "#999999")) +
theme_minimal() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=15),
axis.text.y = element_text(size=15), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15))
g1 <- ggplotGrob(bigfigure)
g2 <- ggplotGrob(dummy)
gtable_select <- function (x, ...)
{
matches <- c(...)
x$layout <- x$layout[matches, , drop = FALSE]
x$grobs <- x$grobs[matches]
x
}
panels <- grepl(pattern="panel", g2$layout$name)
strips <- grepl(pattern="strip_t", g2$layout$name)
g2$layout$t[panels] <- g2$layout$t[panels] - 1
g2$layout$b[panels] <- g2$layout$b[panels] - 1
new_strips <- gtable_select(g2, panels | strips)
grid.newpage()
grid.draw(new_strips)
gtable_stack <- function(g1, g2){
g1$grobs <- c(g1$grobs, g2$grobs)
g1$layout <- transform(g1$layout, z= z-max(z), name="g2")
g1$layout <- rbind(g1$layout, g2$layout)
g1
}
## ideally you'd remove the old strips, for now they're just covered
new_plot <- gtable_stack(g1, new_strips)
grid.newpage()
grid.draw(new_plot) # save as 11 X 9
bigfigure <- ggplot(style.summary, aes(x=Type, y=mean, fill=color, alpha=alpha)) +
geom_bar(stat="identity", color="black") +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=0.2, alpha=1) +
theme_bw() +
facet_wrap(~variable, scales="free_y", ncol=4) +
scale_x_discrete(labels=c("19th", "Imagist", "20th", "Amateur")) +
#scale_y_continous(breaks=c(0, max(mean), ))
scale_fill_manual(values=c("#CC6666", "#003366"), guide=FALSE) +
scale_alpha_manual(values=c(1, 0.4), guide=FALSE) +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=15),
axis.text.y = element_text(size=12), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15)) +
ylab("Feature score") +
xlab("")
dummy <- ggplot(data = style.summary, aes(x = Type, y = mean))+ facet_wrap(~variable, scales="free_y", ncol=4) +
geom_rect(aes(fill=featureType), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
scale_fill_manual(values=c("#cccc66", "#cc9999", "#9999cc", "#999999")) +
#theme_minimal() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=15),
axis.text.y = element_text(size=12), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15))
g1 <- ggplotGrob(bigfigure)
g2 <- ggplotGrob(dummy)
gtable_select <- function (x, ...)
{
matches <- c(...)
x$layout <- x$layout[matches, , drop = FALSE]
x$grobs <- x$grobs[matches]
x
}
panels <- grepl(pattern="panel", g2$layout$name)
strips <- grepl(pattern="strip_t", g2$layout$name)
g2$layout$t[panels] <- g2$layout$t[panels] - 1
g2$layout$b[panels] <- g2$layout$b[panels] - 1
new_strips <- gtable_select(g2, panels | strips)
grid.newpage()
grid.draw(new_strips)
gtable_stack <- function(g1, g2){
g1$grobs <- c(g1$grobs, g2$grobs)
g1$layout <- transform(g1$layout, z= z-max(z), name="g2")
g1$layout <- rbind(g1$layout, g2$layout)
g1
}
## ideally you'd remove the old strips, for now they're just covered
new_plot <- gtable_stack(g1, new_strips)
grid.newpage()
grid.draw(new_plot) # save as 11 X 9
dummy <- ggplot(data = style.summary, aes(x = Type, y = mean))+ facet_wrap(~variable, scales="free_y", ncol=4) +
geom_rect(aes(fill=featureType), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
scale_fill_manual(values=c("#cccc66", "#cc9999", "#9999cc", "#999999")) +
theme_minimal() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=15),
axis.text.y = element_text(size=12), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15))
g1 <- ggplotGrob(bigfigure)
g2 <- ggplotGrob(dummy)
gtable_select <- function (x, ...)
{
matches <- c(...)
x$layout <- x$layout[matches, , drop = FALSE]
x$grobs <- x$grobs[matches]
x
}
panels <- grepl(pattern="panel", g2$layout$name)
strips <- grepl(pattern="strip_t", g2$layout$name)
g2$layout$t[panels] <- g2$layout$t[panels] - 1
g2$layout$b[panels] <- g2$layout$b[panels] - 1
new_strips <- gtable_select(g2, panels | strips)
grid.newpage()
grid.draw(new_strips)
gtable_stack <- function(g1, g2){
g1$grobs <- c(g1$grobs, g2$grobs)
g1$layout <- transform(g1$layout, z= z-max(z), name="g2")
g1$layout <- rbind(g1$layout, g2$layout)
g1
}
## ideally you'd remove the old strips, for now they're just covered
new_plot <- gtable_stack(g1, new_strips)
grid.newpage()
grid.draw(new_plot) # save as 11 X 9
bigfigure <- ggplot(style.summary, aes(x=Type, y=mean, fill=color, alpha=alpha)) +
geom_bar(stat="identity", color="black") +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=0.2, alpha=1) +
theme_bw() +
facet_wrap(~variable, scales="free_y", ncol=4) +
scale_x_discrete(labels=c("19th", "Imagist", "20th", "Amateur")) +
#scale_y_continous(breaks=c(0, max(mean), ))
scale_fill_manual(values=c("#CC6666", "#003366"), guide=FALSE) +
scale_alpha_manual(values=c(1, 0.4), guide=FALSE) +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=14),
axis.text.y = element_text(size=12), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15)) +
ylab("Feature score") +
xlab("")
dummy <- ggplot(data = style.summary, aes(x = Type, y = mean))+ facet_wrap(~variable, scales="free_y", ncol=4) +
geom_rect(aes(fill=featureType), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
scale_fill_manual(values=c("#cccc66", "#cc9999", "#9999cc", "#999999")) +
theme_minimal() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=14),
axis.text.y = element_text(size=12), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15))
g1 <- ggplotGrob(bigfigure)
g2 <- ggplotGrob(dummy)
gtable_select <- function (x, ...)
{
matches <- c(...)
x$layout <- x$layout[matches, , drop = FALSE]
x$grobs <- x$grobs[matches]
x
}
panels <- grepl(pattern="panel", g2$layout$name)
strips <- grepl(pattern="strip_t", g2$layout$name)
g2$layout$t[panels] <- g2$layout$t[panels] - 1
g2$layout$b[panels] <- g2$layout$b[panels] - 1
new_strips <- gtable_select(g2, panels | strips)
grid.newpage()
grid.draw(new_strips)
gtable_stack <- function(g1, g2){
g1$grobs <- c(g1$grobs, g2$grobs)
g1$layout <- transform(g1$layout, z= z-max(z), name="g2")
g1$layout <- rbind(g1$layout, g2$layout)
g1
}
## ideally you'd remove the old strips, for now they're just covered
new_plot <- gtable_stack(g1, new_strips)
grid.newpage()
grid.draw(new_plot) # save as 11 X 9
bigfigure <- ggplot(style.summary, aes(x=Type, y=mean, fill=color, alpha=alpha)) +
geom_bar(stat="identity", color="black") +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci), width=0.2, alpha=1) +
theme_bw() +
facet_wrap(~variable, scales="free_y", ncol=4) +
scale_x_discrete(labels=c("19th", "Imagist", "20th", "Amateur")) +
#scale_y_continous(breaks=c(0, max(mean), ))
scale_fill_manual(values=c("#CC6666", "#003366"), guide=FALSE) +
scale_alpha_manual(values=c(1, 0.4), guide=FALSE) +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=13),
axis.text.y = element_text(size=11), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15)) +
ylab("Feature score") +
xlab("")
dummy <- ggplot(data = style.summary, aes(x = Type, y = mean))+ facet_wrap(~variable, scales="free_y", ncol=4) +
geom_rect(aes(fill=featureType), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
scale_fill_manual(values=c("#cccc66", "#cc9999", "#9999cc", "#999999")) +
theme_minimal() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.text.x  = element_text(angle=0, vjust=0.5, hjust=, size=13),
axis.text.y = element_text(size=11), axis.title.y = element_text(size=15),
strip.text.x = element_text(size=15), strip.text.y = element_text(size=15))
g1 <- ggplotGrob(bigfigure)
g2 <- ggplotGrob(dummy)
gtable_select <- function (x, ...)
{
matches <- c(...)
x$layout <- x$layout[matches, , drop = FALSE]
x$grobs <- x$grobs[matches]
x
}
panels <- grepl(pattern="panel", g2$layout$name)
strips <- grepl(pattern="strip_t", g2$layout$name)
g2$layout$t[panels] <- g2$layout$t[panels] - 1
g2$layout$b[panels] <- g2$layout$b[panels] - 1
new_strips <- gtable_select(g2, panels | strips)
grid.newpage()
grid.draw(new_strips)
gtable_stack <- function(g1, g2){
g1$grobs <- c(g1$grobs, g2$grobs)
g1$layout <- transform(g1$layout, z= z-max(z), name="g2")
g1$layout <- rbind(g1$layout, g2$layout)
g1
}
## ideally you'd remove the old strips, for now they're just covered
new_plot <- gtable_stack(g1, new_strips)
grid.newpage()
grid.draw(new_plot) # save as 11 X 9
t.test(style.ims$objectWords, style.19.non$objectWords) #*
t.test(style.ims$abstractWords, style.19.non$abstractWords) #*
t.test(style.ims$concreteness, style.19.non$concreteness) #*
t.test(style.ims$imageability, style.19.non$imageability) #*
t.test(style.ims$emotWords, style.19.non$emotWords)
t.test(style.ims$valence, style.19.non$valence)
t.test(style.ims$arousal, style.19.non$arousal) #*
head(style.ims)
head(style.summary)
style.summary <- ddply(style.long, c("Type", "variable", "featureType"), summarise,
N    = length(value),
mean = mean(value),
sd   = sd(value),
se   = sd / sqrt(N),
ci = se * qt(0.975, N -1)
)
write.csv("featureScores_summary.csv")
write.csv(style.summary, "featureScores_summary.csv")
t.test(style.ims$objectWords, style.19.non$objectWords) #*
t.test(style.ims$abstractWords, style.19.non$abstractWords) #*
t.test(style.ims$concreteness, style.19.non$concreteness) #*
t.test(style.ims$concreteness, style.19.non$concreteness) #*
t.test(style.ims$imageability, style.19.non$imageability) #*
t.test(style.ims$emotWords, style.19.non$emotWords)
t.test(style.ims$valence, style.19.non$valence)
t.test(style.ims$arousal, style.19.non$arousal) #*
t.test(style.ims$identityEndRhymeFreq, style.19.non$identityEndRhymeFreq) #* (more in imagists)
t.test(style.ims$perfectEndRhymeFreq, style.19.non$perfectEndRhymeFreq) #*
t.test(style.ims$alliterationFreq, style.19.non$alliterationFreq) #* (more in non-imagists)
t.test(style.ims$slantEndRhymeFreq, style.19.non$slantEndRhymeFreq)
t.test(style.ims$consonanceFreq, style.19.non$consonanceFreq)
t.test(style.ims$assonanceFreq, style.19.non$assonanceFreq) #.
t.test(style.ims$wordLength, style.19.non$wordLength) #. (longer words in imagists)
t.test(style.ims$wordFreq, style.19.non$wordFreq) #* (more frequent words in 19)
t.test(style.ims$typeTokenRatio, style.19.non$typeTokenRatio)
t.test(style.21$objectWords, style.19.non$objectWords) #*
t.test(style.21$abstractWords, style.19.non$abstractWords) #*
t.test(style.21$concreteness, style.19.non$concreteness) #*
t.test(style.21$imageability, style.19.non$imageability)
t.test(style.21$emotWords, style.19.non$emotWords) #*
t.test(style.21$valence, style.19.non$valence) #. higher valence in 19th
t.test(style.21$arousal, style.19.non$arousal) #* higher arousal in 19th
t.test(style.21$identityEndRhymeFreq, style.19.non$identityEndRhymeFreq)
t.test(style.21$perfectEndRhymeFreq, style.19.non$perfectEndRhymeFreq) #*
t.test(style.21$alliterationFreq, style.19.non$alliterationFreq)
t.test(style.21$slantEndRhymeFreq, style.19.non$slantEndRhymeFreq) #. more in 21
t.test(style.21$consonanceFreq, style.19.non$consonanceFreq)
t.test(style.21$assonanceFreq, style.19.non$assonanceFreq) #* more in 21
t.test(style.21$wordLength, style.19.non$wordLength)
t.test(style.21$wordFreq, style.19.non$wordFreq)
t.test(style.21$typeTokenRatio, style.19.non$typeTokenRatio)
t.test(style.21a$objectWords, style.19.non$objectWords)
t.test(style.21a$abstractWords, style.19.non$abstractWords)
t.test(style.21a$imageability, style.19.non$imageability)
t.test(style.21a$concreteness, style.19.non$concreteness)
t.test(style.21a$emotWords, style.19.non$emotWords)
t.test(style.21a$valence, style.19.non$valence)
t.test(style.21a$arousal, style.19.non$arousal)
t.test(style.21a$identityEndRhymeFreq, style.19.non$identityEndRhymeFreq)
t.test(style.21a$perfectEndRhymeFreq, style.21$perfectEndRhymeFreq)
t.test(style.21a$perfectEndRhymeFreq, style.19.non$perfectEndRhymeFreq)
t.test(style.21a$perfectEndRhymeFreq, style.19.non$perfectEndRhymeFreq)
t.test(style.21a$identityEndRhymeFreq, style.19.non$identityEndRhymeFreq)
t.test(style.21a$perfectEndRhymeFreq, style.19.non$perfectEndRhymeFreq)
t.test(style.21a$alliterationFreq, style.19.non$alliterationFreq)
t.test(style.21a$slantEndRhymeFreq, style.19.non$slantEndRhymeFreq)
t.test(style.21a$assonanceFreq, style.19.non$assonanceFreq)
t.test(style.21a$consonanceFreq, style.19.non$consonanceFreq)
t.test(style.21a$consonanceFreq, style.19.non$consonanceFreq)
t.test(style.21a$wordLength, style.19.non$wordLength)
t.test(style.21a$wordFreq, style.19.non$wordFreq)
t.test(style.21a$typeTokenRatio, style.19.non$typeTokenRatio)
setwd("~/Dropbox/Work/Grad_school/Research/Metaphor/metaphors/Data/SeedingInterpExp")
setwd("~/Dropbox/Work/Grad_school/Research/Metaphor/metaphors/Data/SeedingPriorExp")
library(ggplot2)
library(reshape2)
library(plyr)
library(tidyr)
library(ggbiplot)
source("~/Dropbox/Work/Grad_school/Research/Utilities/summarySE.R")
p <- read.csv("../../mTurkScripts/SeedingPriorExp/LaunchPriors_byAnimal/priors-trials.csv")
head(p)
p.summary <- summarySE(p, measurevar="response", groupvars=c("animal", "feature"))
