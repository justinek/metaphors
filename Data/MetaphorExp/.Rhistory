noAlt.model$alternatives <- "0"
alt.noAlt.model <- rbind(alt.model, noAlt.model)
##############
# Calculate feature marginals
##############
alt.noAlt.model.f1 <- aggregate(data=subset(alt.noAlt.model, f1==1),
modelProb ~ animal + utterance + qud + alternatives, FUN=sum)
alt.noAlt.model.f1$featureNum <- 1
alt.noAlt.model.f2 <- aggregate(data=subset(alt.noAlt.model, f2==1),
modelProb ~ animal + utterance + qud + alternatives, FUN=sum)
alt.noAlt.model.f2$featureNum <- 2
alt.noAlt.model.f3 <- aggregate(data=subset(alt.noAlt.model, f3==1),
modelProb ~ animal + utterance + qud + alternatives, FUN=sum)
alt.noAlt.model.f3$featureNum <- 3
alt.noAlt.model.marginals <- rbind(alt.noAlt.model.f1, alt.noAlt.model.f2, alt.noAlt.model.f3)
###################
# Join with human metaphor interpretation
###################
alt.noAlt.model.compare <- join(alt.noAlt.model.marginals, d.met.summary,
by=c("animal", "qud", "featureNum"))
alt.noAlt.model.compare$animal.feature <- paste(alt.noAlt.model.compare$animal,
alt.noAlt.model.compare$featureNum, sep=":")
ggplot(alt.noAlt.model.compare, aes(x=modelProb, y=featureProb, color=qud)) +
geom_text(aes(label=animal.feature)) +
geom_point() +
theme_bw() +
facet_grid(.~alternatives) +
geom_abline(intercept=0, slope=1, color="gray") +
xlim(c(0, 1)) +
ylim(c(0, 1))
with(subset(alt.noAlt.model.compare, alternatives=="0"), cor.test(modelProb, featureProb))
with(subset(alt.noAlt.model.compare, alternatives=="1"), cor.test(modelProb, featureProb))
alpha = 3
probGoal = 0.9
lambda = 5
# No QUD
alt.model.noQUD <- data.frame()
for (a in worstanimals) {
filename.noQUD <- paste("../../Model/PsychReviewModels/OutputAltByGoal/noQud-a", alpha,
"-c2-l", lambda, "-plaw-alt-", a, ".csv", sep="")
alt.m.noQUD <- read.csv(filename.noQUD, header=FALSE)
alt.model.noQUD <- rbind(alt.model.noQUD, alt.m.noQUD)
}
colnames(alt.model.noQUD) <- c("animal", "utterance", "category", "f1", "f2", "f3", "goal", "modelProb")
alt.model.noQUD$qud <- "0"
# QUD
alt.model.QUD <- data.frame()
for (a in worstanimals) {
filename.QUD <- paste("../../Model/PsychReviewModels/OutputAltByGoal/g", probGoal, "-a", alpha,
"-c2-l", lambda, "-plaw-alt-", a, ".csv", sep="")
alt.m.QUD <- read.csv(filename.QUD, header=FALSE)
alt.model.QUD <- rbind(alt.model.QUD, alt.m.QUD)
}
colnames(alt.model.QUD) <- c("animal", "utterance", "category", "f1", "f2", "f3", "goal", "modelProb")
alt.model.QUD$qud <- "1"
alt.model <- rbind(alt.model.noQUD, alt.model.QUD)
alt.model$alternatives <- "1"
######
# Model with no alternatives
######
# No QUD
noAlt.model.noQUD <- data.frame()
for (a in worstanimals) {
noAlt.filename.noQUD <- paste("../../Model/PsychReviewModels/OutputAltByGoal/noQud-a", alpha,
"-c2-l", lambda, "-plaw-noAlt-", a, ".csv", sep="")
noAlt.m.noQUD <- read.csv(noAlt.filename.noQUD, header=FALSE)
noAlt.model.noQUD <- rbind(noAlt.model.noQUD, noAlt.m.noQUD)
}
colnames(noAlt.model.noQUD) <- c("animal", "utterance", "category", "f1", "f2", "f3", "goal", "modelProb")
noAlt.model.noQUD$qud <- "0"
# QUD
noAlt.model.QUD <- data.frame()
for (a in worstanimals) {
noAlt.filename.QUD <- paste("../../Model/PsychReviewModels/OutputAltByGoal/g", probGoal, "-a", alpha,
"-c2-l", lambda, "-plaw-noAlt-", a, ".csv", sep="")
noAlt.m.QUD <- read.csv(noAlt.filename.QUD, header=FALSE)
noAlt.model.QUD <- rbind(noAlt.model.QUD, noAlt.m.QUD)
}
colnames(noAlt.model.QUD) <- c("animal", "utterance", "category", "f1", "f2", "f3", "goal", "modelProb")
noAlt.model.QUD$qud <- "1"
noAlt.model <- rbind(noAlt.model.noQUD, noAlt.model.QUD)
noAlt.model$alternatives <- "0"
alt.noAlt.model <- rbind(alt.model, noAlt.model)
##############
# Calculate feature marginals
##############
alt.noAlt.model.f1 <- aggregate(data=subset(alt.noAlt.model, f1==1),
modelProb ~ animal + utterance + qud + alternatives, FUN=sum)
alt.noAlt.model.f1$featureNum <- 1
alt.noAlt.model.f2 <- aggregate(data=subset(alt.noAlt.model, f2==1),
modelProb ~ animal + utterance + qud + alternatives, FUN=sum)
alt.noAlt.model.f2$featureNum <- 2
alt.noAlt.model.f3 <- aggregate(data=subset(alt.noAlt.model, f3==1),
modelProb ~ animal + utterance + qud + alternatives, FUN=sum)
alt.noAlt.model.f3$featureNum <- 3
alt.noAlt.model.marginals <- rbind(alt.noAlt.model.f1, alt.noAlt.model.f2, alt.noAlt.model.f3)
###################
# Join with human metaphor interpretation
###################
alt.noAlt.model.compare <- join(alt.noAlt.model.marginals, d.met.summary,
by=c("animal", "qud", "featureNum"))
alt.noAlt.model.compare$animal.feature <- paste(alt.noAlt.model.compare$animal,
alt.noAlt.model.compare$featureNum, sep=":")
ggplot(alt.noAlt.model.compare, aes(x=modelProb, y=featureProb, color=qud)) +
geom_text(aes(label=animal.feature)) +
geom_point() +
theme_bw() +
facet_grid(.~alternatives) +
geom_abline(intercept=0, slope=1, color="gray") +
xlim(c(0, 1)) +
ylim(c(0, 1))
with(subset(alt.noAlt.model.compare, alternatives=="0"), cor.test(modelProb, featureProb))
with(subset(alt.noAlt.model.compare, alternatives=="1"), cor.test(modelProb, featureProb))
subset(alt.noAlt.model.compare, alternatives=="0" & animal=="whale")
subset(alt.noAlt.model.compare, alternatives=="1" & animal=="whale")
alpha = 3
probGoal = 0.9
lambda = 5
# No QUD
alt.model.noQUD <- data.frame()
for (a in worstanimals) {
filename.noQUD <- paste("../../Model/PsychReviewModels/OutputAltByGoal/noQud-a", alpha,
"-c2-l", lambda, "-plaw-alt-", a, ".csv", sep="")
alt.m.noQUD <- read.csv(filename.noQUD, header=FALSE)
alt.model.noQUD <- rbind(alt.model.noQUD, alt.m.noQUD)
}
colnames(alt.model.noQUD) <- c("animal", "utterance", "category", "f1", "f2", "f3", "goal", "modelProb")
alt.model.noQUD$qud <- "0"
# QUD
alt.model.QUD <- data.frame()
for (a in worstanimals) {
filename.QUD <- paste("../../Model/PsychReviewModels/OutputAltByGoal/g", probGoal, "-a", alpha,
"-c2-l", lambda, "-plaw-alt-", a, ".csv", sep="")
alt.m.QUD <- read.csv(filename.QUD, header=FALSE)
alt.model.QUD <- rbind(alt.model.QUD, alt.m.QUD)
}
colnames(alt.model.QUD) <- c("animal", "utterance", "category", "f1", "f2", "f3", "goal", "modelProb")
alt.model.QUD$qud <- "1"
alt.model <- rbind(alt.model.noQUD, alt.model.QUD)
alt.model$alternatives <- "1"
######
# Model with no alternatives
######
# No QUD
noAlt.model.noQUD <- data.frame()
for (a in worstanimals) {
noAlt.filename.noQUD <- paste("../../Model/PsychReviewModels/OutputAltByGoal/noQud-a", alpha,
"-c2-l", lambda, "-plaw-noAlt-", a, ".csv", sep="")
noAlt.m.noQUD <- read.csv(noAlt.filename.noQUD, header=FALSE)
noAlt.model.noQUD <- rbind(noAlt.model.noQUD, noAlt.m.noQUD)
}
colnames(noAlt.model.noQUD) <- c("animal", "utterance", "category", "f1", "f2", "f3", "goal", "modelProb")
noAlt.model.noQUD$qud <- "0"
# QUD
noAlt.model.QUD <- data.frame()
for (a in worstanimals) {
noAlt.filename.QUD <- paste("../../Model/PsychReviewModels/OutputAltByGoal/g", probGoal, "-a", alpha,
"-c2-l", lambda, "-plaw-noAlt-", a, ".csv", sep="")
noAlt.m.QUD <- read.csv(noAlt.filename.QUD, header=FALSE)
noAlt.model.QUD <- rbind(noAlt.model.QUD, noAlt.m.QUD)
}
colnames(noAlt.model.QUD) <- c("animal", "utterance", "category", "f1", "f2", "f3", "goal", "modelProb")
noAlt.model.QUD$qud <- "1"
noAlt.model <- rbind(noAlt.model.noQUD, noAlt.model.QUD)
noAlt.model$alternatives <- "0"
alt.noAlt.model <- rbind(alt.model, noAlt.model)
##############
# Calculate feature marginals
##############
alt.noAlt.model.f1 <- aggregate(data=subset(alt.noAlt.model, f1==1),
modelProb ~ animal + utterance + qud + alternatives, FUN=sum)
alt.noAlt.model.f1$featureNum <- 1
alt.noAlt.model.f2 <- aggregate(data=subset(alt.noAlt.model, f2==1),
modelProb ~ animal + utterance + qud + alternatives, FUN=sum)
alt.noAlt.model.f2$featureNum <- 2
alt.noAlt.model.f3 <- aggregate(data=subset(alt.noAlt.model, f3==1),
modelProb ~ animal + utterance + qud + alternatives, FUN=sum)
alt.noAlt.model.f3$featureNum <- 3
alt.noAlt.model.marginals <- rbind(alt.noAlt.model.f1, alt.noAlt.model.f2, alt.noAlt.model.f3)
###################
# Join with human metaphor interpretation
###################
alt.noAlt.model.compare <- join(alt.noAlt.model.marginals, d.met.summary,
by=c("animal", "qud", "featureNum"))
alt.noAlt.model.compare$animal.feature <- paste(alt.noAlt.model.compare$animal,
alt.noAlt.model.compare$featureNum, sep=":")
ggplot(alt.noAlt.model.compare, aes(x=modelProb, y=featureProb, color=qud)) +
geom_text(aes(label=animal.feature)) +
geom_point() +
theme_bw() +
facet_grid(.~alternatives) +
geom_abline(intercept=0, slope=1, color="gray") +
xlim(c(0, 1)) +
ylim(c(0, 1))
with(subset(alt.noAlt.model.compare, alternatives=="0"), cor.test(modelProb, featureProb))
with(subset(alt.noAlt.model.compare, alternatives=="1"), cor.test(modelProb, featureProb))
subset(alt.noAlt.model.compare, alternatives=="0" & animal=="whale")
subset(alt.noAlt.model.compare, alternatives=="1" & animal=="whale")
subset(alt.noAlt.model.compare, alternatives=="0" & animal=="whale")
subset(alt.noAlt.model.compare, alternatives=="0" & animal=="whale")
subset(alt.noAlt.model.compare, alternatives=="0" & animal=="ant")
subset(alt.noAlt.model.compare, alternatives=="1" & animal=="ant")
setwd("~/Dropbox/Work/Grad_school/Research/Metaphor/metaphors/Data/MetaphorExp")
d <- read.csv("data49-long.csv")
d$qud <- ifelse(d$condition==1 | d$condition==2, 0, 1)
d$metaphor <- ifelse(d$condition==1 | d$condition==3, 0, 1)
head(d)
nrow(d)
nrow(d) / 49
rep(1, 32)
?ddply
rply
?rply
?ply
d$workerid <- c(rep(c(1:49), 32))
head(d)
d <- read.csv("data49-long.csv")
nsubjs <- length(unique(d$workerid))
d$workerid <- factor(d$woworkerid, labels=c(0:nsubs-1))
d$workerid <- factor(d$woworkerid, labels=c(0:nsubjs-1))
nsubjs <- length(unique(d$workerid))
nsubjs
c(0:nsubjs-1)
d$workerid <- factor(d$woworkerid, labels=c(0:(nsubjs-1)))
c(0:(nsubjs-1))
d <- read.csv("data49-long.csv")
nsubjs <- length(unique(d$workerid))
d$workerid <- factor(d$woworkerid, labels=c(0:(nsubjs-1)))
head(d)
d$workerid <- factor(d$woworkerid, labels=rep(c(0:(nsubjs-1)), 32))
d$workerid <- factor(d$woworkerid, labels=factor(c(0:(nsubjs-1))))
workerid.dict <- data.frame(workerid=unique(d$workerid), anonym=c(0:(nsubjs -1)))
head(workerid.dict)
d <- join(d, workerid.dict, by="workerid")
head(d)
?join
d <- join(workerid.dict, d, by="workerid", type="right")
d <- read.csv("data49-long.csv")
nsubjs <- length(unique(d$workerid))
workerid.dict <- data.frame(workerid=unique(d$workerid), a
d <- read.csv("data49-long.csv")
nsubjs <- length(unique(d$workerid))
workerid.dict <- data.frame(workerid=unique(d$workerid), anonym=c(0:(nsubjs -1)))
d <- join(workerid.dict, d, by="workerid", type="right")
head(d)
d$workerid <- NULL
colnames(d)[1] <- "workerid"
head(d)
d$workerid <- NULL
colnames(d)[1] <- "workerid"
d$qud <- ifelse(d$condition==1 | d$condition==2, 0, 1)
d$metaphor <- ifelse(d$condition==1 | d$condition==3, 0, 1)
?melt
d$qud <- ifelse(d$condition==1 | d$condition==2, 0, 1)
d$metaphor <- ifelse(d$condition==1 | d$condition==3, 0, 1)
head(d)
d.long <- melt(d, id=c("workerid", "animal", "qud", "metaphor"))
d.long <- melt(d, id.vars=c("f1", "f2", "f3"), measure.vars=c("f1prob", "f2prob", "f3prob")))
d.long <- melt(d, id.vars=c("f1", "f2", "f3"), measure.vars=c("f1prob", "f2prob", "f3prob"))
head(d.long)
d.long <- melt(d, id.vars=c("workerid", "animal"), measure.vars=c("f1prob", "f2prob", "f3prob"))
head(d.long)
d <- read.csv("data49-long.csv")
nsubjs <- length(unique(d$workerid))
workerid.dict <- data.frame(workerid=unique(d$workerid), anonym=c(0:(nsubjs -1)))
d <- join(workerid.dict, d, by="workerid", type="right")
d$workerid <- NULL
colnames(d)[1] <- "workerid"
d$qud <- ifelse(d$condition==1 | d$condition==2, 0, 1)
d$metaphor <- ifelse(d$condition==1 | d$condition==3, 0, 1)
#########################
# Turn into long form per feature
#########################
d.long <- melt(d, id.vars=c("workerid", "animal"), measure.vars=c("f1prob", "f2prob", "f3prob"))
head(d.long)
d.long <- melt(d, id.vars=c("workerid", "animal", "qud", "metaphor"),
measure.vars=c("f1prob", "f2prob", "f3prob"))
head(d.long)
d.long.summary <- summarySE(d.long, measurevar="value", groupvars=c("animal", "qud", "metaphor"))
d.long.summary <- summarySE(d.long, measurevar="value", groupvars=c("variable", "qud", "metaphor"))
ggplot(d.summary.summary, aes(x=qudLabel, y=featureProb, fill=featureLabel)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=featureProb-se, ymax=featureProb+se), width=0.2, position=position_dodge(0.9)) +
facet_grid(.~metaphorLabel) +
ylim(c(0, 1)) +
theme_bw() +
xlab("") +
ylab("Probability of feature given utterance") +
#scale_fill_brewer(palette="RdGy", name="Feature")
scale_fill_manual(values=my.colors, name="Feature") +
theme(legend.position=c(0.9,0.8))
ggplot(d.long.summary, aes(x=qud, y=value, fill=variable)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=0.2, position=position_dodge(0.9)) +
facet_grid(.~metaphor)
ggplot(d.long.summary, aes(x=qud, y=value, fill=variable)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=0.2, position=position_dodge(0.9)) +
facet_grid(.~metaphor) +
ylim(c(0, 1))
head(d.long)
colnames(d.long)[5] <- "featureNum"
colnames(d.long)[6] <- "featureProb"
head(d.long)
d.long$featureNum <- factor(d.long$featureNum, levels=c("f1prob", "f2prob", "f3prob"),
labels=c("1", "2", "3"))
head(d.long)
d.long$qud <- factor(d.long$qud,
labels=c("Vague", "Specific"))
d.long$metaphor <- factor(d.long$metaphor,
labels=c("Literal", "Metaphor"))
d.long.summary <- summarySE(d.long, measurevar="value", groupvars=c("featureNum", "qud", "metaphor"))
ggplot(d.long.summary, aes(x=qud, y=value, fill=variable)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=0.2, position=position_dodge(0.9)) +
facet_grid(.~metaphor) +
ylim(c(0, 1))
d.long.summary <- summarySE(d.long, measurevar="featureProb", groupvars=c("featureNum", "qud", "metaphor"))
ggplot(d.long.summary, aes(x=qud, y=featureProb, fill=featureNum)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=featureProb-se, ymax=featureProb+se), width=0.2, position=position_dodge(0.9)) +
facet_grid(.~metaphor) +
ylim(c(0, 1))
head(d.long)
write.csv(d.long, "~/Desktop/metaphor_interp.csv")
write.csv(d.long, "~/Desktop/metaphor_interp.csv", row.names=FALSE, quote=FALSE)
setwd("~/Dropbox/Work/Grad_school/Research/Metaphor/metaphors/Data/FeaturePriorExp")
fp <- read.csv("data40-names-long.csv")
head(fp)
setwd("~/Dropbox/Work/Grad_school/Research/Metaphor/metaphors/Data/FeaturePriorExp")
fp.set <- read.csv("data60-set-long.csv")
head(fp.set)
fp.set.long <- melt(fp.set, id=c("workerid", "gender", "age", "income", "categoryID", "order", "animal",
"name"))
fp.set.long$type <- ifelse(grepl("a_", fp.set.long$variable)==TRUE, "animal", "person")
fp.set.long$featureSetNum <- unlist(lapply(strsplit(as.character(fp.set.long$variable), "_"), "[", 2))
head(fp.set.long)
fp.set.normalizing <- aggregate(data=fp.set.long, value ~ workerid + categoryID + type, FUN=sum)
colnames(fp.set.normalizing)[4] <- "normalizing"
fp.set.long <- join(fp.set.long, fp.set.normalizing, by=c("workerid", "categoryID", "type"))
# filter out rows with 0 as normalizer
fp.set.long <- subset(fp.set.long, normalizing != 0)
head(fp.set.long)
fp.set.long$normalizedProb <- fp.set.long$value / fp.set.long$normalizing
head(fp.set.long)
nsubjs <- length(unique(fp.set.long$workerid))
workerid.dict <- data.frame(workerid=unique(fp.set.long$workerid), anonym=c(0:(nsubjs -1)))
fp.set.long <- join(workerid.dict, fp.set.long, by="workerid", type="right")
head(fp.set.long)
fp.set.long$workerid <- NULL
colnames(fp.set.long)[1] <- "workerid"
head(fp.set.long)
mapping <- read.csv("featureSetMapping.csv")
head(mapping)
mapping <- read.csv("featureSetMapping.csv")
mapping$featureSetNum <- factor(mapping$featureSetNum)
fp.set.long.f1 <- join(fp.set.long.f1, mapping)
fp.set.long <- join(fp.set.long, mapping)
head(fp.set.long)
fp.setl.f1 <- aggregate(subset(fp.set.long, f1==1), normalizedProb ~ workerid + animal + type)
fp.setl.f1 <- aggregate(subset(fp.set.long, f1==1), normalizedProb ~ workerid + animal + type, FUN=sum)
fp.setl.f1 <- aggregate(data=subset(fp.set.long, f1==1),
normalizedProb ~ workerid + animal + type, FUN=sum)
head(fp.set.f1)
fp.set.f1 <- aggregate(data=subset(fp.set.long, f1==1),
normalizedProb ~ workerid + animal + type, FUN=sum)
head(fp.set.f1)
max(fp.set.f1$normalizedProb)
fp.set.f1$featureNum <- 1
fp.set.f2 <- aggregate(data=subset(fp.set.long, f2==1),
normalizedProb ~ workerid + animal + type, FUN=sum)
fp.set.f2$featureNum <- 1
fp.set.f3 <- aggregate(data=subset(fp.set.long, f3==1),
normalizedProb ~ workerid + animal + type, FUN=sum)
fp.set.f3$featureNum <- 1
head(fp.set.f3)
max(fp.set.f3$normalizedProb)
max(fp.set.f2$normalizedProb)
mib(fp.set.f2$normalizedProb)
min(fp.set.f2$normalizedProb)
head(fp.set.marginal)
fp.set.raw.marginal <- rbind(fp.set.f1, fp.set.f2, fp.set.f3)
head(fp.set.raw.marginal)
nrow(fp.set.raw.marginal)
nrow(fp.set.raw.marginal) / 32 / 2
(nrow(fp.set.raw.marginal) + 1) / 32 /2
(nrow(fp.set.raw.marginal) + 2) / 32 /2
(nrow(fp.set.raw.marginal) + 3) / 32 /2
(nrow(fp.set.raw.marginal) + 4) / 32 /2
nsubjs <- length(unique(fp.set.long$workerid))
nsubjs
60 * 32 * 2 * 3
levels(fp.set.long$animal)
levels(fp.set.long$type)
levels(fp.set.raw.marginal$type)
levels(fp.set.raw.marginal)
levels(fp.set.raw.marginal$animal)
levels(fp.set.raw.marginal$type)
unique(fp.set.raw.marginal$type)
length(unique(fp.set.raw.marginal$workerid))
length(unique(fp.set.raw.marginal$animals))
length(unique(fp.set.raw.marginal$animal))
60 * 32 * 2
nrow(fp.set.raw.marginal)
nrow(fp.set.raw.marginal$featureNum)
unique(fp.set.raw.marginal$featureNum)
fp.set.f1 <- aggregate(data=subset(fp.set.long, f1==1),
normalizedProb ~ workerid + animal + type, FUN=sum)
fp.set.f1$featureNum <- 1
fp.set.f2 <- aggregate(data=subset(fp.set.long, f2==1),
normalizedProb ~ workerid + animal + type, FUN=sum)
fp.set.f2$featureNum <- 2
fp.set.f3 <- aggregate(data=subset(fp.set.long, f3==1),
normalizedProb ~ workerid + animal + type, FUN=sum)
fp.set.f3$featureNum <- 3
fp.set.raw.marginal <- rbind(fp.set.f1, fp.set.f2, fp.set.f3)
nrow(fp.set.raw.marginal)
View(fp.set.raw.marginal)
head(fp.set.raw.marginal)
colnames(fp.set.raw.marginal)[4] <- "priorProb"
write.csv(fp.set.raw.marginal, "~/Desktop/metaphor_prior.csv")
write.csv(fp.set.raw.marginal, "~/Desktop/metaphor_prior.csv", row.names=FALSE, quote=FALSE)
setwd("~/Dropbox/Work/Grad_school/Research/Metaphor/metaphors/Data/MetaphorExp")
filenames <- read.csv("../../Model/CogSciModel/combinedOutputFilenames_lambda.txt", header=FALSE)
#filenames <- read.csv("../../Model/CogSciModel/combinedOutputFilenames.txt", header=FALSE)
#filenames <- read.csv("../../Model/LiteralAdjectives/combinedOutputFilenames.txt", header=FALSE)
#filenames <- read.csv("../../Model/CogSciModel/testOutputFilenames.txt", header=FALSE)
cor.table <- data.frame()
max.cor <- 0
max.name <- ""
for (n in filenames$V1) {
if (grepl("g", n)) {
name.qud <- n
name.noQud <- paste("noQud-a", as.list(strsplit(n, "-a"))[[1]][2], sep="")
m.qud <- read.csv(paste("../../Model/CogSciModel/CombinedOutputLambdaParems/", name.qud, sep=""), header=FALSE)
m.noQud <- read.csv(paste("../../Model/CogSciModel/CombinedOutputLambdaParems/",name.noQud, sep=""), header=FALSE)
m.qud$qud <- "1"
m.noQud$qud <- "0"
m <- rbind(m.qud, m.noQud)
colnames(m) <- c("category", "f1", "f2", "f3", "modelProb", "categoryID", "qud")
# compute marginals
m.f1 <- aggregate(data=subset(m, f1==1), modelProb ~ categoryID + qud, FUN=sum)
m.f1$featureNum <- "1"
m.f2 <- aggregate(data=subset(m, f2==1), modelProb ~ categoryID + qud, FUN=sum)
m.f2$featureNum <- "2"
m.f3 <- aggregate(data=subset(m, f3==1), modelProb ~ categoryID + qud, FUN=sum)
m.f3$featureNum <- "3"
m.marginals <- rbind(m.f1, m.f2, m.f3)
compare <- join(d.met.summary, m.marginals, by=c("categoryID", "featureNum", "qud"))
cor <- with(compare, cor(featureProb, modelProb))
cor.info <- data.frame(name=name.qud, met=cor)
cor.table <- rbind(cor.table, cor.info)
if (cor > max.cor) {
max.cor <- cor
max.name <- name.qud
best <- compare
best.model <- m
}
}
}
with(best, cor.test(featureProb, modelProb))
head(best)
head(best.model)
filenames <- read.csv("../../Model/CogSciModel/combinedOutputFilenames_lambda.txt", header=FALSE)
#filenames <- read.csv("../../Model/CogSciModel/combinedOutputFilenames.txt", header=FALSE)
#filenames <- read.csv("../../Model/LiteralAdjectives/combinedOutputFilenames.txt", header=FALSE)
#filenames <- read.csv("../../Model/CogSciModel/testOutputFilenames.txt", header=FALSE)
cor.table <- data.frame()
max.cor <- 0
max.name <- ""
for (n in filenames$V1) {
if (grepl("g", n)) {
name.qud <- n
name.noQud <- paste("noQud-a", as.list(strsplit(n, "-a"))[[1]][2], sep="")
m.qud <- read.csv(paste("../../Model/CogSciModel/CombinedOutputLambdaParems/", name.qud, sep=""), header=FALSE)
m.noQud <- read.csv(paste("../../Model/CogSciModel/CombinedOutputLambdaParems/",name.noQud, sep=""), header=FALSE)
m.qud$qud <- "1"
m.noQud$qud <- "0"
m <- rbind(m.qud, m.noQud)
colnames(m) <- c("category", "f1", "f2", "f3", "modelProb", "categoryID", "qud")
# compute marginals
m.f1 <- aggregate(data=subset(m, f1==1), modelProb ~ categoryID + qud, FUN=sum)
m.f1$featureNum <- "1"
m.f2 <- aggregate(data=subset(m, f2==1), modelProb ~ categoryID + qud, FUN=sum)
m.f2$featureNum <- "2"
m.f3 <- aggregate(data=subset(m, f3==1), modelProb ~ categoryID + qud, FUN=sum)
m.f3$featureNum <- "3"
m.marginals <- rbind(m.f1, m.f2, m.f3)
compare <- join(d.met.summary, m.marginals, by=c("categoryID", "featureNum", "qud"))
cor <- with(compare, cor(featureProb, modelProb))
cor.info <- data.frame(name=name.qud, met=cor)
cor.table <- rbind(cor.table, cor.info)
if (cor > max.cor) {
max.cor <- cor
max.name <- name.qud
best <- compare
best.model <- m
best.marginals <- m.marginals
}
}
}
with(best, cor.test(featureProb, modelProb))
head(best.marginals)
best.marginals <- join(best.marginals, d.met.summary)
head(best.marginals)
best.marginals$N <- NULL
best.marginals$featureProb <- NULL
best.marginals$sd <- NULL
best.marginals$se <- NULL
best.marginals$ci <- NULL
head(best.marginals)
write.csv(best.marginals, "~/Desktop/metaphor_model.csv", row.names=FALSE, quote=FALSE)
